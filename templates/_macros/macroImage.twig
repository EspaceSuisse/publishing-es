{% macro articleImage(handleParam, transformKey, paramClass) %}


    {% set title        = handleParam.title | default('image') | ascii | kebab | slice(0, 40) %}
    {% set altText      = handleParam.fPlainTextI18nMultiline ?? '' %}
    {% set photographer = handleParam.fPlainTxt ?? '' | ascii | kebab | slice(0, 20) %}
    {% set provider     = handleParam.fPlainTxt2 ?? '' | ascii | kebab | slice(0, 20) %}
    {% set cc           = handleParam.fPlainTxt3 ?? '' | ascii | kebab | slice(0, 10) %}
    {% set transform    = transformKey | ascii | kebab | slice(0, 20) %}
    {% set projectTag   = 'espace-suisse' %}

    {% set filenamePattern = [
        title,
        provider,
        cc,
        transform,
        projectTag,
        '{fullname|shorthash}.{extension}'
    ]|filter(v => v|length) | join('-') %}


    {# Transform image via Imager X #}
    {% set transformedImages = craft.imagerx.transformImage(handleParam, transformKey, {
        filenamePattern: filenamePattern
    }) %}

    {# Device order: mobile first #}
    {% set deviceMap = ['mobile', 'desktop'] %}

    <picture class="{{ paramClass ?? 'imgItem' }}">
        {% for img in transformedImages %}
            {% set device = deviceMap[loop.index0] %}
            <source srcset="{{ img.url }}" media="{{ device == 'mobile' ? '(max-width: 1080px)' : '(min-width: 1081px)' }}">
        {% endfor %}
        <img src="{{ transformedImages[0].url }}" alt="{{ altText|e('html_attr') }}" title="{{ handleParam.title|e('html_attr') }}">
    </picture>
{% endmacro %}
